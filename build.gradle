apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'c'

mainClassName = "de.qabel.desktop.QblMain"
version = '0.1'

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dir 'libs'
    }
}

sourceSets {
    guiTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/test-gui/java')
        }
        resources.srcDir file('src/test-gui/resources')
    }
}

configurations {
    guiTestCompile.extendsFrom testCompile
    guiTestRuntime.extendsFrom testRuntime
}

jar.doFirst{
	manifest {
		attributes 'Implementation-Title': 'Qabel Core', 'Implementation-Version': version
		attributes 'Main-Class': 'de.qabel.desktop.QblMain'
	  attributes 'Class-Path': configurations.runtime.collect { it.getName() }.join(' ')
	}
}

dependencies {
    testCompile 'junit:junit:4.11'
    testCompile group: 'org.meanbean', name: 'meanbean', version: '2.+'
    testCompile 'org.testfx:testfx-core:4.0.+'
    testCompile 'org.testfx:testfx-junit:4.0.+'

    compile 'commons-cli:commons-cli:1.2'
    compile 'com.amazonaws:aws-java-sdk:1.10.32'
    // see https://github.com/AdamBien/afterburner.fx/pull/54 //compile 'com.airhacks:afterburner.fx:1.6.2' // Apache 2.0
    compile 'javax.inject:javax.inject:1'
    compile name: 'afterburner'

    compile project(":qabel-core")
}

task copyToLib(type: Copy) {
  	from configurations.runtime
    into "$buildDir/libs"  
}

classes {   
	 doLast {
        copyToLib.execute()
    }
}

task guiTest(type: Test) {
    testClassesDir = sourceSets.guiTest.output.classesDir
    classpath = sourceSets.guiTest.runtimeClasspath
    outputs.upToDateWhen { false }
}
check.dependsOn guiTest
guiTest.mustRunAfter test

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

tasks.withType(Test) {
    def platform = "${System.properties['os.name'].toLowerCase()}_${System.properties['os.arch']}"
    systemProperty "java.library.path", "./qabel-core/build/binaries/curve25519SharedLibrary/$platform/"

    reports.html.destination = file("${reporting.baseDir}/${name}")
}
run {
    def platform = "${System.properties['os.name'].toLowerCase()}_${System.properties['os.arch']}"
    systemProperty "java.library.path", "./qabel-core/build/binaries/curve25519SharedLibrary/$platform/"
}
